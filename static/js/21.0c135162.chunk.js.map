{"version":3,"sources":["components/Typography.js","components/Page.js","components/Title/CardTitle.jsx","components/SearchBox/SearchInput.jsx","components/DataTable/DataTable.jsx","pages/PatientsPage.jsx"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","objectWithoutProperties","classes","classNames","defineProperty","react_default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","components_Typography","Breadcrumb","BreadcrumbItem","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","Title","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_1__","props","component","variant","color","gutterBottom","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","SearchInput","onSubmit","preventDefault","placeholder","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_12__","onClick","event","disabled","aria-label","direction","_material_ui_icons_LastPage__WEBPACK_IMPORTED_MODULE_16___default","_material_ui_icons_FirstPage__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_icons_KeyboardArrowRight__WEBPACK_IMPORTED_MODULE_15___default","_material_ui_icons_KeyboardArrowLeft__WEBPACK_IMPORTED_MODULE_14___default","Math","ceil","max","createData","calories","fat","rows","sort","useStyles2","table","minWidth","CustomPaginationActionsTable","_React$useState","React","useState","_React$useState2","_Users_matosky_react_reduction1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setPage","_React$useState3","_React$useState4","setRowsPerPage","emptyRows","min","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_7__","Paper","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_5__","slice","row","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_6__","scope","align","style","height","colSpan","_material_ui_core_TableFooter__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_TablePagination__WEBPACK_IMPORTED_MODULE_9__","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","r","components_Page__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","react_icons_ti__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_9__","components_SearchBox_SearchInput__WEBPACK_IMPORTED_MODULE_10__","components_Title_CardTitle__WEBPACK_IMPORTED_MODULE_11__","components_DataTable_DataTable__WEBPACK_IMPORTED_MODULE_12__","useStyles","card","margin","display","flexDirection","alignItems","PatientPage","size","cardBottom","to"],"mappings":"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","file":"static/js/21.0c135162.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-5', 'p-5', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h4\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport { Form, Input } from 'reactstrap';\nimport {Card, CardContent} from '@material-ui/core';\n\nconst SearchInput = () => {\n  return (\n\n    <Form  className=\"cr-search-form\" onSubmit={e => e.preventDefault()} >\n        <Card>\n            <CardContent>\n                  <Input\n                    type=\"search\"\n                    placeholder=\"Search by Patient Name, Hospital Number \"\n                    className=\"cr-search-form__input pull-right\"\n                  />\n            </CardContent>\n        </Card>\n    </Form>\n\n\n  );\n};\n\nexport default SearchInput;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7),\n  createData('Donut', 452, 25.0),\n  createData('Eclair', 262, 16.0),\n  createData('Frozen yoghurt', 159, 6.0),\n  createData('Gingerbread', 356, 16.0),\n  createData('Honeycomb', 408, 3.2),\n  createData('Ice cream sandwich', 237, 9.0),\n  createData('Jelly Bean', 375, 0.0),\n  createData('KitKat', 518, 26.0),\n  createData('Lollipop', 392, 0.2),\n  createData('Marshmallow', 318, 0),\n  createData('Nougat', 360, 19.0),\n  createData('Oreo', 437, 18.0),\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function CustomPaginationActionsTable() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}","import Page from 'components/Page';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n\n  Form,\n\n  Alert\n} from 'reactstrap';\nimport { \n    Card,\n    CardContent,   \n}\nfrom '@material-ui/core';\nimport { TiWarningOutline } from \"react-icons/ti\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchInput from 'components/SearchBox/SearchInput';\nimport Title from 'components/Title/CardTitle';\nimport DataTableList from 'components/DataTable/DataTable';\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      margin: theme.spacing(20),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center', \n    },\n    \n  }));\n\nconst PatientPage = () => {\n    const classes = useStyles();\n  return (\n    <Page title=\"Patients\" >\n        <Alert color=\"primary\">\n            <TiWarningOutline \n                size=\"30\"\n                className=\" text-dark\"/>  { '  '} \n                Note : Only checked in Patients can be search here\n            </Alert>\n        <Card className={classes.cardBottom}>  \n            <CardContent>\n                <Title >Basic Information \n                \n                <Link to=\"/patient-registration\">\n                    <Button color=\"primary\" className=\" float-right mr-1\" >\n                        Add Patient\n                    </Button>    \n                </Link>   \n                </Title> \n                <br/>\n                {/* Search Form Input Field */}\n                <Form>\n                    \n                    <SearchInput />\n                </Form>   \n                <br/>\n                <DataTableList />\n                   \n            </CardContent>\n        </Card>\n        \n</Page>\n  );\n};\n\nexport default PatientPage;\n"],"sourceRoot":""}